#!/bin/bash

TMP_SERVICES_FILE=/tmp/__k8s_services
TMP_PODS_FILE=/tmp/__k8s_pods

function get_services() {
  kubectl get services --all-namespaces \
    -o jsonpath='{range .items[*]}{.metadata.namespace}/{.metadata.name}{"\n"}{end}'
}

function get_pods() {
  kubectl get pods --all-namespaces \
    -o jsonpath='{range .items[*]}{.metadata.namespace}/{.metadata.name}{"\n"}{end}'
}

function logs() {
  get_services | xargs -n1 -i echo "service/{}" > $TMP_SERVICES_FILE
  get_pods | xargs -n1 -i echo "pod/{}"> $TMP_PODS_FILE

  choice=$(cat $TMP_SERVICES_FILE $TMP_PODS_FILE | fzf)
  resource=$(echo $choice | awk -F '/' '{print $1"/"$3}')
  namespace=$(echo $choice | awk -F '/' '{print $2}')

  kubectl logs $resource --all-containers --namespace $namespace --follow
}

function help(){
  echo "Usage: $(basename $0) <subcommand> [options]"
  echo "Subcommands:"
  echo "    log       tails logs of a service"
  echo "    configs   view decoded configs (coming soon)"
  echo ""
  echo "For help with each subcommand run:"
  echo "$(basename $0) <subcommand> -h|--help"
  echo ""
}

subcommand=$1
case $subcommand in
  "" | "-h" | "--help")
    help
    ;;
  *)
    shift
    ${subcommand} $@
    if [ $? = 127 ]; then
      echo "Error: '$subcommand' is not a known subcommand." >&2
      echo "       Run '$ProgName --help' for a list of known subcommands." >&2
      exit 1
    fi
    ;;
esac
